name: PR Open

on:
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  format:
    name: Terraform-Format
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.8
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive
        continue-on-error: true

  deployment:
    name: setup
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.2'
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.18.1'
          kubernetes version: 'v1.20.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: wait
        run: while [[ $(kubectl -n kube-system get pods -l k8s-app=kube-dns -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for pod" && sleep 1; done
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_KEY }}
      - name: write config
        run: |
          gem install bundler --user
          bundle install
          cat << EOF > ~/.kong_license
          ${{ secrets.KONG_LICENSE_FILE }}
          EOF
          cp examples/hybrid/terraform.tfvars.example examples/hybrid/terraform.tfvars
      - name: Kitchen Test
        run: kitchen converge default || true
        env:
          TF_VAR_super_admin_password: ${{ secrets.SUPER_ADMIN_PASSWORD }}
          TF_VAR_kong_database_password: ${{ secrets.KONG_DATABASE_PASSWORD }}
          TF_VAR_kong_image: ${{ secrets.KONG_IMAGE }}
      - name: wait control plane
        run: pushd examples/hybrid/; ws=$(terraform workspace show); popd; while [[ $(kubectl -n kong-hybrid-cp-${ws} get pods -l name=kong-hybrid-cp-${ws} -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for pod" && sleep 1; done 
      - name: Verify
        run: kitchen verify default
      - name: Kitchen Destroy
        run: kitchen destroy default

